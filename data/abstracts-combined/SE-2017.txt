Augmenting Model-Based Design with the HEAT Human System Integration Advisor While automated design methods based on model-driven design have produced enormous strides in efficiency and reduced lifecycle costs, human factors experts have traditionally performed separate but complementary analysis not accommodated by modeling tools. This paper describes a major effort funded by the U.S. Marine Corps to integrate human modeling into model-driven design. Example applications are to analyze the crew space in a vehicle, aircraft, tank, etc. for issues ranging from ability to accommodate individuals in a range of sizes, account for gear worn by warfighters, examine both static position and dynamic movement of human occupants, and identify safety issues. We describe the Human Systems Integration (HSI) Engineering Analysis Tool, or HEAT. HEAT provides advice for engineers using material-design software on how their design choices affect HSI domains. While there are eight HSI domainsEnvironment, Habitability, Human Factors Engineering (HFE), Manpower, Personnel, Safety, Survivability, and Training that HEATs design can accommodate, we discuss here our recent work on Human Factors Engineering, Survivability/Safety, and Habitability. HEAT is designed in a modular fashion to integrate with the U.S. Marine Corps (USMC) Framework for Assessing Cost and Technology (FACT). We present a scenario of use for HEAT illustrating the derivation of potential HSI risks for a crew space, and the use of HEAT to monitor and detect changes in the engineering model that are made to address another concern (corrosion), but inadvertently have an HSI impact. Various United States Air Force (USAF) service lines and program offices, from Air C2, Space C2 and Theater/Ballistic Missile Defense C2 offices, exist to provide end-to-end lifecycle services and capabilities. The involved training solutions are inherently stovepipe in nature as they are developed from domain specific requirements and focus on qualification training. Thus, training gaps exist to rehearse warfighting activities that integrate Air C2, Space C2 and Theater/Ballistic Missile Defense C2 Services, especially across small team core mission areas for warfighter proficiency. The Air Missile Space Training Environment (AMSTE) addresses these training gaps by integrating these service line training capabilities into a central enterprise training service line. The AMSTE initiative has four precepts: simplify Air, Missile, & Space (AMS) training, promote on-demand training, provide Training as a Service, and improve small team training. This paper addresses the current progress of AMSTE to accomplish these goals. AMSTE uses a collection of Government Off The Shelf (GOTS), Commercial Off The Shelf (COTS) and open source technologies to merge disparate legacy training solutions into a flexible, modular and scalable framework to facilitate cross-domain, on-demand training. The AMSTE is executed in a localized cloud architecture utilizing virtualization infrastructure running containerized training components. The orchestration of components is managed by the AMSTE framework abstraction layer. This unburdens the user from the complexities of the underlying legacy systems, while also providing an open framework for incorporating a variety of diverse legacy training systems. Training sessions can be rapidly provisioned, recycled and removed without the need to configure physical workstations, servers, and networks. The AMSTE ability to readily orchestrate and alter scenario content and event list in a system of systems architecture allows the training audience to tailor sessions at the point of need. Bringing this level of control closer to the target audience through a cloud and data center structure assures higher fidelity, improved responsiveness and shorter turnaround times. The Old Dominion University Modeling and Simulation senior design class is developing a system to rapidly model prototypes of Unmanned Surface Vehicles (USVs). The system is a component of a larger system the Naval Sea System Command plans to use to develop test strategies for autonomous USVs. The purpose of this paper is to describe the high-level design of the system. The Rapid USV Model Prototyping System (RUMPS) consists of three components: a motion model which is a mathematical representation of the motion of a USV, a tool that aids in the creation of the parameters for the USV motion model, and a visualization of the trajectory of the USVs motion and performance metrics. Additionally, software packages and dynamics engines that may be applicable to the integration of a USV motion model. The system will be verified to ensure proper integration of the system components. The system will also be validated by comparing the motion models behavior to that of an actual boat representative to a USV. This paper also describes how each component in the system works, identifies relevant software applicable to the implementation of a USV model, and describe the process to conduct validation. Warfare is no longer primarily a function of capital, labor and technology superiority on the battlefield. Rather, warfare has expanded to complex interconnected networks of information that can shape the outcome of conflict, on and off the battlefield. In the case of hearts and minds warfare, the Internet and social media has been used to share and often spread information in order to produce negative propaganda towards the conflicting parties. (Berman, Shapiro and Felter (2011) Using modern and highly prevalent methods of interaction, terrorist organizations continuously expand their networks through real-time information exchange, enabling operatives to organize, spread information (and misinformation), and recruit new members into their terrorist organizations. As Taspinar (2009) states within his policy publication Fighting Radicalism, there are no terrorist societies only conditions for the emergence of terrorist activities. The relative popularity of certain terrorist networks can only be explained within the framework of such radicalized societies where extremist violence finds a climate of legitimacy and implicit support. Such radicalized societies are permeated by a deep sense of collective frustration, humiliation, and deprivation relative to expectations. Terrorists easily exploit this radicalized social habitat. (Ibid) Learning system interoperability standards let applications share or connect infrastructure, reducing development costs, administrative burden, and user friction. We propose a more comprehensive form of interoperability that supports shared user data, user interfaces, and session management services. This will let applications leverage differences in how and when they are used to achieve better learning outcomes than is possible with only native capabilities. To demonstrate this concept, we integrated two complementary learning applications. PERLS is a Personal Assistant for Learning phone app that supports adult self-regulated learning. It recommends learning activities across a range of applications and devices, and provides a coherent user experience for learners as they progress through parallel trajectories varying in topic, timespan, intensity, and (in)formality. PALMs is a web service that uses flashcard-like interactions to train visual knowledge. It accelerates learning by adaptively optimizing the content sequence based on a model of learning rate and retention. The applications were integrated to let PERLS recommend and launch PALMs content, then seamlessly hand off interaction control so that users are unaware of switching applications. PALMs was made able to schedule user interactions in future PERLS sessions, making it possible to space practice on a longer timescale to increase retention of PALMs content. Without PALMs, PERLS has no principled way to accelerate visual knowledge learning. Without PERLS, PALMs has no way to extend its retention enhancing model to long timescales. Integration required substantial time and cooperation to define objectives, co-design APIs, and synchronize engineering across organizations. The Total Learning Architecture (TLA), currently in development, will reduce integration requirements with the goal of making cross-application synergy more common. In this paper, we describe our technical approach to combining PERLS and PALMS, then describe how TLA, treating this effort as a use case, could reduce barriers for comparable future integration efforts. Cybersecurity Engineering operates within the new domain of Cyberspace, and is focused on the security aspects of systems to ensure the design, architecture, and development are robust enough to deal with diverse disruptions once deployed. Disruptions might include a malicious attack, a security breach, infrastructure degradation due to natural disaster, an insider threat, or a physical act of terrorism. The opportunity exists to leverage Modeling and Simulation (MANDS) in a novel way to represent and assess security vulnerabilities, and engineer and test security enhancements without compromising operational integrity. Namely, it provides an efficient and expedient means to facilitate Cybersecurity Engineering. It is a game changer. This paper explores the benefit and approach to develop and use threat models and penetration (pen) test models upon representations of weapon systems (current or future). Virtual systems, simulations and stimulators representing these systems can be distributed via networks. Models and adjunct simulations reflecting cyber threats, malicious effects, and pen injections can be used in the context of this distributed environment to assess and validate system designs and architectures without compromising integrity. MANDS provides a means to evaluate potential threats before they're exposed and in the wild, and promotes security engineering early in the development process. It offers a means to bolster system integrity creating greater confidence of systems before they are deployed or updated. This paper discusses the important elements of security engineering that can be supported using MANDS, and offers four steps to begin to leverage MANDS in a new and novel way. In this paper we present visualizations that decipher the hidden rules or logic of complex traffic patterns that help analysts understand and improve operations. We demonstrate this technology on aircraft carriers using simulated notional data from hundreds of simulations and plotting their statistical variations. Operations on aircraft carriers are often described as controlled but complex. Complex organizational systems, such as those that govern and effect aircraft movement onboard carriers, do not operate on predetermined low level rules but rather adapt and learn based on high-level guidelines. Critical situations that are often new or unique are best tackled by adaptive and well-trained organizations. One approach to building a scalable and adaptable organization is to use simulation based training. This approach enables familiarizing stakeholders with repetitive patterns of behaviors and also exploring what if scenarios never before attempted. We present typical examples of data statistics, visual analytics, and rule and pattern analysis from carrier deck notional data. These techniques help analysts explore the data and its patterns to improve operational processes. These tools could also support Validation and Verification (V&V) of the rules engine of the simulator. The algorithms and logic developed in this paper are scalable across domains. The methodology, algorithms and tools have a number of potential customers in the Navy community, the broader Department of Defense community and the commercial sector. This technology will scale to manage the traffic pattern of any asset moving in groups subject to complex spatio-temporal constraints. Some of the possible application domains are depot maintenance, a manufacturing shop floor, airport traffic management and even theme parks where people move in groups. This paper describes a comparative study of the performance of a simulation model of a two-wheeled robot performing a line following tasks versus a similarly setup simulated environment. The robot model includes closed loop kinematics for the chassis motion and a dynamic model of the wheel motors and control algorithm that generate wheel velocity based on actuation commands. The purpose of this study is to evaluate the fidelity of the model as well as the influence of the motor model, sensor model and simulation time-step on the overall system fidelity while the robot is performing a line following task under a variety of aggressiveness parameters. For simulation purposes, The Autonomous Robotics Modeling & Simulation Environment (ARMSE) is utilized while the Stingray robotic kit from Parallax, equipped with several sensors and additional capabilities, is used as the robotic platform. Improved realism in modeling and simulation (MANDS) efforts is increasingly viewed as a necessity or requirement across a wide spectrum of Department of Defense (DoD) projects. However, the definition of MANDS realism differs considerably across the community of practice. The goal is to clarify the requirements for realism; to elucidate the meaning of realism as it pertains to different communities; and to frame key concepts in the representation of reality. In general, MANDS efforts support several functional areas, including: training, mission rehearsal, test, evaluation, experimentation, acquisition, analysis, and planning. Consider training, analysis, and acquisition as examples. The goal for MANDS training is to cost-effectively challenge the skills of the trainee at the tactical, operational, and strategic levels. Skills should be challenged without risking injury to people, or damaging equipment. Training should encompass the full range of peacetime and wartime activities the trainee would engage in. MANDS must provide realistic portrayals of the world to support that goal. Likewise, MANDS analysis aims to provide a powerful set of tools to systematically evaluate and optimize alternative force structures against a range of foes, who may utilize potentially different tactics. The goal for MANDS acquisition is to safely, cost-effectively and iteratively design virtual prototypes to assess the viability of future systems prior to production. Increased realism supports and improves the functional areas listed above. In order to provide identification with, and understanding of realism, perspectives from each functional area will be discussed in addition to the role of modeling paradigms and implementation concepts. 