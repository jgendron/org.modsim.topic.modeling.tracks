The Acquisition System is Broken – But Not for the Reasons You Think
John R. “Buck” Surdu, Ph.D. Cole Engineering
Orlando, FL Buck.Surdu@cesicorp.com
The “acquisition system” is broken.It is an axiom that the acquisition system is built for an industrial-age world and has demonstrated its inability to keep up with the demands of a post-industrial world. It is taken on faith that reforming the acquisition system should focus on the acquisition workforce. Addressing the root causes of perceived ineffectiveness of the acquisition system includes many people and processes that are generally not considered in “acquisition reform.” The latest solution to address symptoms rather than root causes is the Cross Functional Team, which is nothing new; it is the concept of the overarching integrated product team (OIPT) – already part of acquisition doctrine – by another name. It is time to consider the entire acquisition system, leveraging modeling tools and not just program execution. This paper begins the discussion of five areas that the authors believe can improve acquisition that are not being addressed in current discussions: the requirements process, the process of selecting PMs, disincentives to innovate, the budgeting process, and use of Government-owned simulation tools.
ABOUT THE AUTHORS
John R. “Buck” Surdu is a retired Army colonel and Ph.D. in computer science. He has seen the “acquisition process” from a number of perspectives. He is a Defense Acquisition Workforce Improvement Act (DAWIA) level III program manager as well as a Program Management Institute (PMI) Program Management Professional (PMP) certified program manager. He has worked in the acquisition system in uniform, as a DoD civilian, and as a contractor, both in program office acquisition as well as technology development. He was a board-selected Army PM and a PM at DARPA, and he has served as a PM in industry.
Luis E. Velazquez is a federal employee (NH-IV/GS15) for the Marine Corps serving as the Branch Head for Future Capabilities and Innovation, Marine Corps Systems Command (MCSC), Systems Engineering, and Acquisition Logistics (SEAL). Over 30 years of professional experience between the Navy, Marine Corps, Industry, and Federal services. Subject Matter Expert (SME) with extensive engineering experience in employing LAN/WAN, software engineering, and systems integration performing advance services to include Live, Virtual, and Constructive (LVC) simulation systems integration and interoperability with tactical C4i devices.
2018 Paper No. 68 Page 1 of 8
Luis E. Velazquez Marine Corps Systems Command
Quantico, VA luis.velazquez@usmc.mil
ABSTRACT
MODSIM World 2018

The Acquisition System is Broken – But Not for the Reasons You Think
INTRODUCTION
John R. “Buck” Surdu, Ph.D. Cole Engineering
Orlando, FL Buck.Surdu@cesicorp.com
Luis E. Velazquez Marine Corps Systems Command
Quantico, VA luis.velazquez@usmc.mil
The “acquisition system” is broken.It is an axiom that the acquisition system is built for an industrial-age world and has demonstrated its inability to keep up with the demands of a post-industrial world. It is taken on faith that reforming the acquisition system should focus on the acquisition workforce, program managers, contracting, and Program Management offices. Addressing the root causes of perceived ineffectiveness of the acquisition system includes many people and processes that have generally not considered in previous attempts “acquisition reform.” The Assistant Secretary of the Army (Acquisition, Logistics, and Technology) has recently circulated a presentation thorough the acquisition workforce, entitled Acquisition Streamline and Culture Incentives [ASA(ALT) 2017], focused on buying down risk, empowering Program Executive Office (PEO)s and PMs, “smart contracting,” and testing initiatives. While all of these are worthy improvements, they do not address the key impediments to more effective acquisition.
The latest solution to address symptoms rather than root causes is the Cross Functional Team, which is nothing new; it is the concept of the overarching integrated product team (OIPT) – already part of acquisition doctrine – by another name. It is time to consider the entire acquisition system, leveraging modeling tools and not just program execution. We assert that there are four major sources of acquisition inefficiencies that need to be addressed: a waterfall requirements process that reduces flexibility across the entire acquisition system; selection of PMs that is not based on their knowledge, skills, and experience; disincentives for PMs to innovate; and budgeting that increases risks and reduces flexibility. While each of these topics is deep enough to support its own paper, in this paper we introduce these topics to initiate the conversation.
THE WATERFALL REQUIREMENTS PROCESS:
Lt. Col. Thomas “Bull” Holland, Ph.D., U.S. Army, asserted that under the current requirements process, “Every person involved in the writing of these documents offers their opinion but no one is required to offer any evidence to support that opinion... There are no footnotes, endnotes, or references necessary to define a requirement in a JCIDS document. Neither experimentation nor research is necessary to propose and approve a threshold attribute, key performance parameter, or key supportability attribute in a JCIDS document” [Holland, 2017]. While this is indeed true, the need for evidence-based requirements is only a partial solution to acquisition reform.
While it may be the right approach for major systems like ships and tanks, the current “waterfall” requirements process does not facilitate agile and responsive development. “Agile” is not the only approach to development that could enable more responsive development, but it is the most prevalent in commercial software development. Any process that allows the requirements to evolve over time based on user feedback is certainly better than a waterfall model in which the PM gets requirements the first year and then 3 to 5 years later delivers a system that may not be what the users want. Capability developers often slavishly protect the requirements document rather than adapting it to changing conditions. The JCIDS process provides disincentives to revising the requirements document frequently in response to changing conditions or new technologies. Clearly the PM should not be chasing the next hot technology for technology’s sake, but requirements documents must be redesigned to be more flexible and enable flexible material development. A requirements document that is more like a statement of objectives provides both the capability and material developer the flexibility to deliver a solution that actually meets Soldier and Marine needs.
2018 Paper No. 68 Page 2 of 8
MODSIM World 2018

The concept of Agile development includes the very important role of Product Owner [Lapham, 2011], which is an inherently governmental role. It is the Product Owner who helps decompose requirements into Epics, User Stories, and Tasks for the developers to fulfill. The lead engineer within the product management office should act as the Scrum Master. The Scrum Master ensures that development work is coordinated and that blockers are resolved. The Government sends many of their engineers in software-intensive projects to Scrum Master training, which provides a good introduction to the Agile concepts, but it would be useful for more Government personnel, particularly requirements developers, to attend Product Owner training as well.
When a bureaucracy is seen as unresponsive, the Department of Defense tends to create another one to circumvent the first instead of fixing the root problems. Recognizing that the requirements and material development processes were not responsive enough, the Department of Defense created a number of new bureaucracies that now have to be maintained and over time become just as bureaucratic as the one they were designed to circumvent. The Department tries to bypass bureaucracies instead of fixing the root causes of the failure of the existing ones. The key epiphany that is a lesson experienced, rather than a lesson learned it appears, was that the creation of organizations like the Joint IED Defeat Organization (JIEDDO, now the Joint Improvised- Threat Defeat Organization, JIDO), the Rapid Equipping Force (REF), the Combatting Terrorism Technical Support Office (CTTSO), and PM MRAP was not the streamlining of the development process; it was the streamlining of the requirements process. These organizations did not so much circumvent the material development process but the requirements process.
In the absence of meaningful acquisition reform, many capability developers have resorted to becoming shadow material developers, creating their own solutions that are in competition for resources with programs of record. These homegrown solutions rarely address support, training, maintainability, technology refresh, integration with other systems, Risk Management Framework, and other issues that are important to fielding a product throughout the Army. Admittedly studies and experiments in battle labs to determine performance criteria; detailed analysis of DOTMLPFP (Doctrine, Organization, Training, Material, Logistics, Personnel, Facilities, Policy, as cited in Acquisition Notes 2017) to determine if a new material solution is required; engagement with personnel in the Government-owned labs to understand the real state of the art and trajectory of technology development; and engagement with users is hard, joyless, tedious -- but important -- work. Previous efforts to streamline acquisition have failed to address the requirements process, the selection of personnel to be capability developers, and poorly written requirements documents while allowing capability developers to act as largely unaccountable shadow material developers. This is NOT the kind of teamwork that will enable us to improve acquisition in a meaningful way.
The requirements process must be improved. Capability developers must create evidence-based requirements as described by Holland, not just unsubstantiated opinions [Holland, 2017]. In addition, requirements documents must be constructed to facilitate Agile development. In industry, new development commonly defines the “minimum viable product,” and Department of Defense requirements documents must do the same. A minimum viable product is a development technique in which a new product is developed with sufficient features to satisfy early adopters [Agile Alliance, 2017]. Going hand-in-hand with evidence-based requirements, the complete set of features should be designed and developed only after considering feedback from the product's initial users. Requirements documents must define the minimum viable product and then provide statements of objectives that are iteratively refined with added detail during development based on frequent users feedback and in response the changing conditions and technologies.
Agile requirements should shorten the requirements process, not lengthen it. An Agile requirements process will define the minimum viable product and a broader set of objectives, rather than trying to lock down the requirements in great detail before development begins or users can provide feedback. The capability and material developer can work as a team to evolve a product that fully meets customer needs over time. This will avoid the long and arduous requirements definition process as it exists today and also prevent delivering a product that meets the requirements but does not meet users needs by the time it is fielded.
Modeling and Simulation can and must support the agile requirements process, but here DoD is behind best industry practices. CitiBank and others have proven that simulations can streamline the requirements process and improve communications between developer and stakeholders (Fitzgerald, 2007). The Department of Defense Mandatory Procedures for Major Defense Acquisition Program and Major Automated Information
MODSIM World 2018
 2018 Paper No. 68 Page 3 of 8

System Acquisition Programs (DoD 5000.2-R) calls for use of Modeling and Simulation to support acquisition and testing, but it is silent on the use of simulation to support requirements development. The Requirements Engineering Handbook (Young, 2004), found on the Acquisition Notes Web page, has no mention of simulation as a tool to develop and validate requirements. The Modeling and Simulation Guidance for the Acquisition Workforce (Deputy Under Secretary of Defense for Acquisition and Technology, 2008) describes roles of Modeling and Simulation to assist in trade studies of alternative solutions and to experiment with designs to evaluate their ability to meet measures of performance, cost, supportability, and safety. It, too, is silent on the use of simulation to support requirements development and validation. The JCIDS process speaks to validating requirements at different stages of the process but does not address the need for Agile requirements that are evidence-based.
Simulation can help generate evidence-based requirements that define the minimum viable product. Through a series of experiments or wargames, the capabilities of the system to be developed can be refined. Beginning with the desired operational impact, the parameters of the system to be developed can be relaxed until the minimum viable product is defined. Other desirable characteristics then become codified in the requirements document as statements of objectives. Throughout development, as users provide feedback on desirable characteristics, the simulation scenarios used in requirements definition can be used to judge the incremental operational impact of each user-requested feature. If the simulation results are favorable, the findings become encapsulated in Epics and User Stories by the Product Owner, who helps prioritize those User Stories in the Product Backlog. The prioritized User Stories are subsequently assigned as tasks to developers in future Sprints.
THE INEFFECTIVE PROCESS FOR SELECTING PRODUCT AND PROJECT MANAGERS:
Selection of Product and Project Managers inappropriately mirrors the processes used to select battalion commanders. The current process works for battalion command selection, where there is more similarity than differences between infantry battalions. This process is not effective for PM selection, where there are more differences than similarities between technology domains of the various programs of record. In the current model, if the PM has no domain knowledge, it often takes the PM two years to really begin to contribute to the program. Our personnel system needs to recognize the need for domain knowledge in the creation of new technologies and select material and capability developers with the attributes needed to be successful.
There is no shortage of quality officers to be PMs. Product and project managers are hard-working individuals, doing their best in a very difficult job. The current process, however, doesn’t necessarily select PMs who are the best fit for the project they are supposed to lead. The current process rewards past performance in a generic sense rather than selecting PMs who have all or most of the right skills to be successful in the project to which they will be assigned.
Each year the Army generates a list of PM positions requiring officers to run them. It is often stated that a “good manager can manage any program,” but this ignores the importance of domain knowledge. Rather than first selecting officers to anoint as PMs and then trying to find good matches for the various PM positions from this constrained list, the Army should first rank order the PM positions from the most important to the Army to the least important. Then the Department of Defense should look at the total pool of qualified officers to determine who the best fit for the most important job is. This “fit” would be based on knowledge, skills, and experience of the PM and the attributes and domain of the project. The best fit officer for the second most important PM job is then assigned, and so on. At the end, the Army gets the least good fit for the least important job. This allocation of officers to best fit positions becomes the PM slate for that year and better meets the needs of the Army. In particular, we need to find officers with knowledge, skills, and experience in software development to lead software intensive systems. This is how industry selects PMs.
Modeling could be used to study and perhaps modify the selection process. Advances in data mining could be used to study the performance of PMs related to their knowledge, skills, and experience. While every project or program has unique characteristics, data mining to determine the effectiveness of PMs whose knowledge, skills, and experience align with the base technologies of the program to which they are assigned versus those where the domain knowledge did not match might identify previously undiscovered correlations. In parallel, the Department might reach out to industry partners and study how they select project managers.
2018 Paper No. 68 Page 4 of 8
MODSIM World 2018

THE DIS-INCENTIVES TO INNOVATE:
Technology developers are incentivized to transition their technologies to programs of record. In fact technology transition is often evaluated on their annual appraisals. PMs, however, are graded on meeting cost, schedule, and performance goals. With tight budgets and timelines, PMs understandably tend to be very risk averse. Insertion of technology is often perceived as increasing risk in one or more of those attributes, particularly where there is no direct linkage between the new technology and an explicit requirement.
Clearly, we do not want PMs to be distracted from meeting key performance parameters as they chase a never- ending stream of good ideas and bright, shiny technologies, but we must find a way to incentivize PMs to work technology insertion into their planning. In some ways, this is related to the waterfall requirements issue, mentioned previously. A more agile requirements process would enable the capability and material developer to consider technology insertion in a deliberate way in response to changing conditions and user feedback. The budgeting issues, described next, also limit the PMs ability to innovate.
Modeling and Simulation can help. PMs are measured purely on cost, schedule, and performance. The simulation tools used to help define the minimum viable product and for the requirements developer and Product Owner to evaluate user feedback can also support PM innovation regarding system performance. When new technologies or capabilities are identified, they can be added to the system in simulation to evaluate their incremental value. If they prove effective, the PM then has evidence to support a decision to adapt this new technology in the midst of development. Rather than chasing new technologies for technology’s sake, Modeling and Simulation can support a conversation between the PM, requirements developer, and Product Owner.
To bring new capabilities rapidly to our military, we must define mechanisms that provide incentives to PMs to accept and integrate new technologies into their systems during development. Our PMs need to be taught how to leverage and value technology developers in their Defense Acquisition University classes while also avoiding the undisciplined chasing of “shiny objects” that can derail a program. PMs can better support technology development by engaging actively and openly with the technology development community, particularly to get them working on technologies to address pre-planned product improvement (P3I) requirements. Program Executive Offices should be given additional resources to help incentivize and fund technology insertion. The results of the Modeling and Simulation to evaluate the potential of new technologies can be used by the PM and Product Owner to petition the PEO for reserved technology insertion funding.
BUDGETING AS A MAJOR SOURCE OF PROGRAM RISK:
When a project begins, an independent government cost estimate is created that estimates the total cost to deliver the threshold capabilities of a project. Great care is taken to ensure the PM has not “padded” his estimate or created “management reserve.” The lack of reserve contributes greatly to the risk averse nature of PMs. The focus is often on minimizing risk, because there is no reserve in the budget if anything goes awry. Our tactical doctrine tells commanders to maintain a reserve to deal with unforeseen setbacks or opportunities, yet our acquisition doctrine prohibits maintaining a reserve. So, when the project begins, the PM has no schedule slack and no financial reserve to apply when problems arise.
Then as the program executes, the PM generally does not get all the money he was promised. The program is taxed by various organizations before the PM gets his money. Nearly every year during budget negotiations, programs lose five or ten percent in the year of execution with the promise that it will be restored in the out years. Often this reduction in funding is needed to start a new project that had not been previously budgeted. This restoration rarely occurs, but even if it does, these budget drills increase program risk, as any change in schedule, shorter or longer, generally increases costs.
The budgeting process also punishes PMs for cost savings and encourages waste. Each year a PM is presented with spending goals. PMs are told they must obligate x percentage of their budget by some month and then y percentage by another month. If a PM has not obligated all the money, staff officers “harvest” the money and dole it out as end-of-year funding to various projects. Popular lore within the acquisition community holds that some whole programs are run with end-of-year money. If a PM is able to execute his program more cheaply or use technology insertion to reduce costs or develop capabilities ahead of schedule, he is not allowed to retain
2018 Paper No. 68 Page 5 of 8
MODSIM World 2018

that money for future “rainy days.” As a result, PMs rush to get all their money obligated in time to achieve the designated thresholds and does not hold any funding in reserve for fear of losing that money and other money in the out years.
A better way to provide resources to PMs would be to more realistically assess the level of project risk and provide a reserve on top of the independent government cost estimate. The taxes that are extracted from the PMs budget to run the PEO headquarters and other organizations should instead be part of their budget, not a tax on programs. Finally, it should be very, very hard to take this money away from the PM during project execution. That means that we will start fewer new programs, but programs of record will be healthier and better able to deal with risk.
LEVERAGING GOVERNMENT OWNED MODELING TOOLS:
The U.S. Marine Corps has instituted modeling tools to assist the Program Management (PM) and program executive (PEO) offices with tradeoff analysis applications that can facilitate rapid synthetic prototyping to help expedite analysis and better inform the acquisition process. The Federal Acquisition Regulations, in fact, require all programs of record to have a simulation support plan – but does not require simulations to be used for requirements development. One of the tools is the Framework for Assessing Cost and Technology (FACT) (figure 1). FACT is a browser-based decision support tool that enables design and conceptual decisions for the acquisition community that includes the elements of acquisition, fielding, and sustainment. The U.S. Marine Corps requirements dictate the need for a multi- faceted visualization capability to help acquisition professionals make critical milestone decisions. Within the FACT tool there is capability to further explore and focus the problem-space understanding and in turn realize program performance, cost, and schedule savings. Tools like these are designed to be platform and browser agnostic as well as independent of external library dependencies thanks to FACT’s open standard design, standardization, and commonality. FACT includes the following features:
• Supportive of all types of media and visualization technologies
• Leverages reusable assets throughout all levels of visualization and interactivity
• Visualization viewable from any hardware device or browser
• Reusable by other Department of Defense (DoD) software and systems entities
• Supporting two-way communication between user and assets
• Ease of integration of new technologies into the visualization layer
• Integration with other systems and data accepted through common web communication protocols (web
services application program interface (API))
2018 Paper No. 68 Page 6 of 8
MODSIM World 2018

MODSIM World 2018
  Figure 1. Marine Corps Systems Command’s Long Term Vision for Modeling & Simulation Integration CONCLUSION
Meaningful acquisition reform requires the Department of Defense to consider more than just the program office. While it is almost certainly true that acquisition professionals may be able to perform more efficiently and effectively, all previous attempts to streamline acquisition have focused on telling PMs to “do more with less.” To make the acquisition system better able to address the needs of a post-industrial world, we must look at all aspects of the acquisition system. Specifically, we must:
• Develop Agile requirements to enable faster, Agile development and improve the likelihood that the delivered product will meet customer needs,
• Match PMs’ knowledge, skills, and experience to the project domain,
• Incentivize technology insertion during program execution, and
• Improve the budgeting process so that it facilitates, rather than hampers program success.
Each of these topics could be the subject of a separate paper. We introduce these topics in the hope of starting a thoughtful conversation about creative ways to address these concerns. We also provide indications of how Modeling and Simulation can be leveraged to partially address these issues.
ACKNOWLEDGEMENTS
The authors wish to thank the Marine Corps Systems Command (MCSC) for funding the FACT effort. FACT is under the leadership of Mrs. Janet Evans-Morgis, Executive Director, MCSC, and under the direction of Mr. Luis E. Velazquez, Branch Head, Future Capabilities and Innovation, Systems Engineering, Acquisition and Logistics (SEAL).
REFERENCES
2018 Paper No. 68 Page 7 of 8

Acquisition Notes (2017) JCIDS Process: DOTMLPF-P Analysis. Accessed from: http://acqnotes.com/acqnote/acquisitions/dotmlpf-analysis
Agile Alliance (2017). Minimum Viable Product. Accessed from: https://www.agilealliance.org/glossary/mvp/#q=~(filters~(tags~(~'mvp))~searchTerm~'~sort~false~sortDirection~'a sc~page~1)
Assistant Secretary of the Army (Acquisition, Logistics, and Technology) (ASA(ALT)) (2017). Acquisition Streamline and Culture Incentives. Presentation to PEO STRI Workforce, December 2017.
Fitzgerald, Michael (2007). How Simulation Tools and Streamline Application Development. CIO. Accessed from: https://www.cio.com/article/2442714/developer/how-simulation-software-can-streamline-application- development.html
Agile Methods: Selected DoD Management and
Acquisition Concerns
Holland, Thomas. (2017) How the Army Ought to Write Requirements. Military Review. November to December 2017. Accessed from: http://www.armyupress.army.mil/Journals/Military-Review/English-Edition- Archives/November-December-2017/How-the-Army-Ought-to-Write-Requirements/
Lenuik, Tracy A., & Murley, Samuel R. (2014). Data on Demand: Building a Framework to Support Platform- Independent Visualization (PIV). Paper presented at MODSIM World 2014, Hampton, VA.
Office of the Deputy Under Secretary of Defense of Acquisition and Technology (2008). Modeling and Simulation Guidance for the Acquisition Workforce. Washington, DC. Accessed from: http://www.acqnotes.com/Attachments/Modeling%20&%20Simulation%20Guidance%20for%20the%20Acquisitio n%20Workforce.pdf
Office of the Secretary of Defense (2002), Department of Defense Mandatory Procedures for Major Defense Acquisition Program and Major Automated Information System Acquisition Programs (DoD 5000.2-R), Washington, DC.
Young, Ralph R. (2004). The Requirements Engineering Handbook. London: Artech House. Accessed from: http://www.acqnotes.com/Attachments/The%20Requirements%20Engineering%20Handbook%20by%20Ralp h%20R.%20Young.pdf
MODSIM World 2018
 Lapham, Mary Ann., Garcia-Miller, Suzanne., Adams, Lorraine., Brown, Nanette., Hackemack, Bart., Hammons,
 Charles (Bud)., Levine, Linda., & Schenker, Alfred. (2011).
 2018 Paper No. 68 Page 8 of 8
(CMU/SEI-2011-TN-002). Retrieved January 16, 2018, from the Software Engineering
 Institute, Carnegie Mellon University website: http://resources.sei.cmu.edu/library/asset-view.cfm?AssetID=9769
